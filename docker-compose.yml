services:
  mongo1:
    container_name: mongo1
    image: mongo
    environment:
      - DB_PASS=${DB_PASS}
      - SYSTEM_PASS=${SYSTEM_PASS}
    volumes:
      - ~/mongors/data1:/data/db
      - ./rs-init.sh:/scripts/rs-init.sh
      - ./db-user-init.sh:/scripts/db-user-init.sh
      - ./system-user-init.sh:/scripts/system-user-init.sh
      - ./security.key:/tmp/security.key
    networks:
      - mongo-cluster-network
    ports:
      - 27021:27017
    links:
      - mongo2
      - mongo3
    restart: always
    entrypoint: [ "/bin/bash", "-c" ]
    command:
      - |
        mkdir -p /mongo-config
        cp /tmp/security.key /mongo-config/security.key
        chmod 400 /mongo-config/security.key
        /usr/bin/mongod --keyFile /mongo-config/security.key --auth --bind_ip localhost,mongo1 --replSet dbrs
  mongo2:
    container_name: mongo2
    image: mongo
    volumes:
      - ~/mongors/data2:/data/db
      - ./security.key:/tmp/security.key
    networks:
      - mongo-cluster-network
    ports:
      - 27022:27017
    restart: always
    entrypoint: [ "/bin/bash", "-c" ]
    command:
      - |
        mkdir -p /mongo-config
        cp /tmp/security.key /mongo-config/security.key
        chmod 400 /mongo-config/security.key
        /usr/bin/mongod --keyFile /mongo-config/security.key --auth --bind_ip localhost,mongo2 --replSet dbrs

  mongo3:
    container_name: mongo3
    image: mongo
    volumes:
      - ~/mongors/data3:/data/db
      - ./security.key:/tmp/security.key
    networks:
      - mongo-cluster-network
    ports:
      - 27023:27017
    restart: always
    entrypoint: [ "/bin/bash", "-c" ]
    command:
      - |
        mkdir -p /mongo-config
        cp /tmp/security.key /mongo-config/security.key
        chmod 400 /mongo-config/security.key
        /usr/bin/mongod --keyFile /mongo-config/security.key --auth --bind_ip localhost,mongo3 --replSet dbrs

networks:
  mongo-cluster-network:
    external: true
    driver: bridge